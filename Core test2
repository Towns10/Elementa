using System;
using System.IO;
using System.Timers;

namespace ElementaProject
{
    class Working
    {




        static void Main()
        {
            Publics pw = new Publics();

            //			Timer playerStamina = new Timer(120000);
            //			playerStamina.Tick += new EventHandler(Publics.staminaGain);
            Console.WriteLine("Welcome to Elementa, what is your name?");
            Publics.playerName = Console.ReadLine();
            //			playerStamina.Start();
            Publics.playerLocation = "Center";
            do
            {
                Publics.playerInput = Console.ReadLine();
                switch (playerInput)
                {
                    case "look":
                        //look method
                        break;
                    case "inventory":
                        //inventory method
                        break;
                    case "attack":
                        //attack method
                        break;
                    case "verbs":
                        //verbs method
                        break;
                    case "cast":
                        //cast method
                        break;
                    case "n":
                        if (Publics.newLocationNorth == String.Empty)
                        {
                            Console.WriteLine("You cannot go that way.");
                        }
                        else
                        {
                            Publics.playerLocation = Publics = newLocationNorth;
                            Publics.playerStamina--;
                        }
                        break;
                }
            } while (Publics.playerHealth > 0);
        }
    }


    public class Publics
    {
        //		static void staminaGain ()
        //		{
        //			if(Working.playerHealth > 0)
        //		    {
        //			    if(Working.playerStamina < 8)
        //			    {
        //				    playerStamina ++;
        //			    }
        //		    }
        //		    else
        //		    {
        //			    playerHealth ++;
        //		    }
        //		} 
        public static string[] verbList = { "look", "inventory", "attack", "verbs", "cast" };
        string[] moveList = { "n", "e", "s", "w", "ne", "se", "sw", "nw", "up", "down", "in", "out" };
        public static int playerHealth = 1;
        public static int playerStamina = 3;
        public static string playerName;
        public static string playerLocation;
        public static string playerInput;
        public static string newLocationNorth;
        string newLocationEast;
        string newLocationSouth;
        string newLocationWest;
        string newLocationNorthEast;
        string newLocationSouthEast;
        string newLocationSouthWest;
        string newLocationNorthWest;
        string newLocationUp;
        string newLocationDown;
        string newLocationIn;
        string newLocationOut;
        public void DirectionChoice()
        {
            if (playerInput.Equals("n"))
            {
                if (newLocationNorth.Equals,"")
				playerLocation = newLocationNorth;
                playerStamina--;
            }
            else if (playerInput.Equals("e"))
            {
                playerLocation = newLocationEast;
                playerStamina--;
            }
            else if (playerInput.Equals("s"))
            {
                playerLocation = newLocationSouth;
                playerStamina--;
            }
            else if (playerInput.Equals("w"))
            {
                playerLocation = newLocationWest;
                playerStamina--;
            }
            else if (playerInput.Equals("ne"))
            {
                playerLocation = newLocationNorthEast;
                playerStamina--;
            }
            else if (playerInput.Equals("se"))
            {
                playerLocation = newLocationSouthEast;
                playerStamina--;
            }
            else if (playerInput.Equals("sw"))
            {
                playerLocation = newLocationSouthWest;
                playerStamina--;
            }
            else if (playerInput.Equals("nw"))
            {
                playerLocation = newLocationNorthWest;
                playerStamina--;
            }
            else if (playerInput.Equals("u"))
            {
                playerLocation = newLocationUp;
                playerStamina--;
            }
            else if (playerInput.Equals("d"))
            {
                playerLocation = newLocationDown;
                playerStamina--;
            }
            else if (playerInput.Equals("in"))
            {
                playerLocation = newLocationIn;
                playerStamina--;
            }
            else if (playerInput.Equals("out"))
            {
                playerLocation = newLocationOut;
                playerStamina--;
            }
            else
            {
                Console.WriteLine("Invalid Entry");
            }
        }
        public void SetLocs(string n, string e, string s, string w, string ne, string se, string sw, string nw, string u, string d, string i, string o)
        {   //this will change the exits of each square entered when instantiated upon entrance of a square
            newLocationNorth = n;
            newLocationEast = e;
            newLocationSouth = s;
            newLocationWest = w;
            newLocationNorthEast = ne;
            newLocationSouthEast = se;
            newLocationSouthWest = sw;
            newLocationNorthWest = nw;
            newLocationUp = u;
            newLocationDown = d;
            newLocationIn = i;
            newLocationOut = o;
        }
     }
    class StarterArea
    {   //test area for movement

        void CenterLoc()
        {
            Publics p = new Publics();
            Console.WriteLine("You stand in a quiet grotto surrounded on all sides by tower pine trees. A soft bed of needles and cones lie underfoot and the quiet chirping of birds can be heard. This place smells of pine sap and the air is crisp and refreshing on the face.");
            Console.WriteLine("You can leave this place and head north, south, east, or west. Where do you wish to go?");
            p.SetLocs("North", "East", "South", "West", "", "", "", "", "", "", "", "");
            p.DirectionChoice();
        }

        void NorthLoc()
        {
            Publics p = new Publics();
            Console.WriteLine("This is the road into town. It travels north and south but the path into town going north seems blocked.");
            Console.WriteLine("You can leave this place and head south. Where do you wish to go?");
            p.SetLocs("", "", "Center", "", "", "", "", "", "", "", "", "");
            p.DirectionChoice();
        }

        void EastLoc()
        {
            Publics p = new Publics();
            Console.WriteLine("Welcome to the cesspit. It's foul even for nightsoil.");
            Console.WriteLine("You can leave this place and head west. Where do you wish to go?");
            p.SetLocs("", "", "", "Center", "", "", "", "", "", "", "", "");
            p.DirectionChoice();
        }

        void SouthLoc()
        {
            Publics p = new Publics();
            Console.WriteLine("This is the road into town. It travels north and south but the path out of town going south seems blocked.");
            Console.WriteLine("You can leave this place and head north. Where do you wish to go?");
            p.SetLocs("Center", "", "", "", "", "", "", "", "", "", "", "");
            p.DirectionChoice();
        }

        void WestLoc()
        {
            Publics p = new Publics();
            Console.WriteLine("Welcome to the tavern. It's foul even for nightsoil.");
            Console.WriteLine("You can leave this place and head east. Where do you wish to go?");
            p.SetLocs("", "Center", "", "", "", "", "", "", "", "", "", "");
            p.DirectionChoice();
        }
    }
    class Player    //stats for the players
    {
        int playerHealth;
        int playerStamina;
        int playerHit;
        int playerDamage;
        bool playerDamageType;      //if true magic damage used
        string playerName;
    }
    class Enemy     //stats for enemy
    {
        string enemyName;
        int enemyHealth;
        int enemyStamina;
        int enemyHit;
        int enemyDamage;
        bool enemyDamageType;   //if true magic damage used

    }
}


void choiceSelecter (playerInput)
{
    if (playerInput)
}
